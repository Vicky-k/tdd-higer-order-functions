import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {

    static final int driverLicenseAge = 12;
    static final int drinkingAge = 21;
    static final int babySitAge = 14;
    public boolean someLibraryMethod() {
        return true;
    }

    public List<String> slowFoxes(List<String> words) {



        List<String> actual = words
                .stream()
                .filter(abc -> !"Swift Fox".equals((String)abc))
                .collect(Collectors.toList());


        return actual;

    }


    public List<Person> adult(List<Person> persons) {


        List<Person> actual = persons
                .stream()
                .filter(person -> {
                    if(person != null) {
                        if(person.age >= 18)
                                return true;
                        else
                            return false;
                    }
                    return false;
                })
                .collect(Collectors.toList());


        return actual;

        /*if(persons.size() == 1 && (persons.get(0) == null || persons.get(0).age < 18))
                return Arrays.asList();
        return persons;*/




    }


    public List<Person> genericAgeFilter(int age, List<Person> persons) {

        List<Person> actual = persons
                .stream()
                .filter(person -> {
                        if(person != null)  {
                                return ageClosure(age, person);
                        }
                        return false;
                })
                .collect(Collectors.toList());


        return actual;
    }


    public boolean ageClosure(int age, Person person)    {
                if(person.age >= age)  {
                        return true;
                }
                return false;
    }
}